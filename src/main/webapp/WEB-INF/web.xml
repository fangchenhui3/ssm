<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>

  <display-name>IMYZONE'S PROJECT</display-name>
  <!-- 使用ContextLoaderListener配置时，需要告诉它Spring配置文件的位置 -->
  <!-- 如果没有指定，上下文载入器会在/WEB-INF/applicationContext.xml中找Spring配置文件 -->
  <!-- 我们可以通过在Servlet上下文中设置contextConfigLocation参数，来为上下文载入器指定一个或多个Spring配置文件 -->
  <!-- 注意：contextConfigLocation参数是一个用逗号分隔的路径列表，
  其路径是相对于Web系统的根路径的在<param-value> </param-value>里指定相应的xml文件名，
  如果有多个xml文件，可以写在一起并一“,”号分隔。上面的applicationContext-*.xml采用通配符，
  比如这那个目录下有applicationContext-ibatis-base.xml，applicationContext-action.xml，
  applicationContext-ibatis-dao.xml等文件，都会一同被载入。-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring-bean-*.xml</param-value>
    </context-param>


    <!-- spring过滤乱码 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <!-- druid -->
    <filter>
        <filter-name>DruidWebStatFilter</filter-name>
        <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
        <init-param>
            <param-name>exclusions</param-name>
            <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>


    <filter-mapping>
        <filter-name>DruidWebStatFilter</filter-name>
        <url-pattern>*.*</url-pattern>
    </filter-mapping>

    <!-- druid -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>DruidStatView</servlet-name>
        <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
    </servlet>



    <!-- 配置前端控制器 -->
    <!-- SpringMVC的前端控制器 -->
    <!-- 当DispatcherServlet载入后，它将从一个XML文件中载入Spring的应用上下文，该XML文件的名字取决于<servlet-name> -->
    <!-- 这里DispatcherServlet将试图从一个叫做springmvc-mvc.xml的文件中载入应用上下文，其默认位于WEB-INF目录下 -->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>DruidStatView</servlet-name>
        <url-pattern>/druid/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>

    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>

  <!--上面是springmvc中必须的-->
    <welcome-file-list>
        <welcome-file>/jsp/login.jsp</welcome-file>
        <!--<welcome-file>index.html</welcome-file>-->
    </welcome-file-list>

    <error-page>
        <error-code>404</error-code>
        <location>/error/404.html</location>
    </error-page>

    <error-page>
        <error-code>500</error-code>
        <location>/error/500.html</location>
    </error-page>


</web-app>
